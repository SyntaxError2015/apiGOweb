{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "<html ng-app=\"apiGO\">\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n        <link rel=\"stylesheet\" href=\"/css/bootstrap.css\">\n        <link rel=\"stylesheet\" href=\"/css/site.css\"/>\n        <link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>\n        <link href='http://fonts.googleapis.com/css?family=Ubuntu:400,500&subset=latin,latin-ext' rel='stylesheet' type='text/css'>\n        \n        <!--scripts-->\n        <script src=\"/js/bootstrap.min.js\" type=\"text/javascript\"></script>\n        <script src=\"/js/angular.min.js\"></script>\n        <script src=\"/js/app.js\" type=\"text/javascript\"></script>\n    </head>\n\n    <body>\n        \n    </body>\n\n</html>",
			"file": "index.html",
			"file_size": 730,
			"file_write_time": 1428072803000000,
			"settings":
			{
				"buffer_size": 736,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/media/nbi/Kituri/WINDOWS 10/WAMP/www/Pages/Index.php",
			"settings":
			{
				"buffer_size": 6109,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/media/nbi/Kituri/WINDOWS 10/WAMP/www/Index.php",
			"settings":
			{
				"buffer_size": 11167,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/**\n * Created by Bogdan on 3/14/2015.\n */\nvar app = angular.module('apiGO', []);\n\n\napp.directive('newEpisodes', function () {\n    return {\n        restrict: 'E',\n        templateUrl: '/Views/new-episodes.html',\n        controller: ['$http', function ($http) {\n            var ctrl = this;\n\n            this.loadMore = function () {\n                //make the div bigger\n                var ep = $(\".ep\");\n                var addHeight = ep.height() + 2 * parseInt(ep.css('padding-bottom'));\n                $(\"#eps\").height($(\"#eps\").height() + addHeight);\n\n                $http.get('/API/EpisodeAPI.php?get=firstPageEpisodes&start=' + this.start + '&number=' + (this.getNrEpsPerRow())).success(function (data) {\n                    ctrl.episodes = ctrl.episodes.concat(data);\n                    ctrl.start += ctrl.getNrEpsPerRow()\n                });\n            };\n\n            this.getNrEpsPerRow = function () {\n                var screenWidth = $('#eps').width();\n                if (screenWidth > 1700) return 5;\n                if (screenWidth >= 1200) return 4;\n                if (screenWidth >= 992) return 3;\n                return 2;\n            };\n\n            $http.get('/API/EpisodeAPI.php?get=firstPageEpisodes&start=1&number=' + (this.getNrEpsPerRow() * 2)).success(function (data) {\n                ctrl.episodes = data;\n            });\n\n            this.start = this.getNrEpsPerRow() * 2 + 1;\n        }],\n        controllerAs: 'epCtrl'\n    };\n});\n\napp.directive('episodesList', function () {\n    return {\n        restrict: 'E',\n        templateUrl: '/Views/episodes-list.html',\n        scope: {\n            animeid: '=animeid'\n        },\n        controller: ['$scope', '$http', function ($scope, $http) {\n            var ctrl = this;\n            this.text = $scope.animeid;\n            $http.get('/API/EpisodeAPI.php?get=episodesForAnime&id=' + $scope.animeid).success(function (data) {\n                ctrl.episodes = data;\n            });\n        }],\n        controllerAs: 'epCtrl'\n    }\n});\n\napp.directive('anime', function () {\n    return {\n        restrict: 'E',\n        templateUrl: '/Views/anime.html',\n        scope: {\n            animeid: '=animeid'\n        },\n        controller: ['$scope', '$http', function ($scope, $http) {\n            var ctrl = this;\n\n            $http.get('/API/AnimeAPI.php?get=anime&id=' + $scope.animeid).success(function (data) {\n                ctrl.anime = data;\n            });\n        }],\n        controllerAs: 'animeCtrl'\n    }\n});\n\n\napp.directive('tooltip', function () {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            $(element).tooltip();\n        }\n    };\n});\n\n\napp.filter('htmlToPlaintext', function() {\n        return function(text) {\n            return String(text).replace(/<[^>]+>/gm, '');\n        }\n    }\n);\n\n",
			"file": "js/app.js",
			"file_size": 2930,
			"file_write_time": 1426547508000000,
			"settings":
			{
				"buffer_size": 2832,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/nbi/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
			"settings":
			{
				"buffer_size": 31084,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 111.0,
		"selected_items":
		[
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ist",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			]
		],
		"width": 583.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/nbi/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/nbi/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/home/nbi/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/nbi/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/nbi/iTec2015/apiGOweb/css/bootstrap.css.map",
		"/home/nbi/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/nbi/Desktop/Index.php",
		"/home/nbi/Desktop/noutati.php"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Ctrl+l"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"settings":
					{
						"buffer_size": 736,
						"regions":
						{
						},
						"selection":
						[
							[
								715,
								715
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/media/nbi/Kituri/WINDOWS 10/WAMP/www/Pages/Index.php",
					"settings":
					{
						"buffer_size": 6109,
						"regions":
						{
						},
						"selection":
						[
							[
								12,
								12
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/media/nbi/Kituri/WINDOWS 10/WAMP/www/Index.php",
					"settings":
					{
						"buffer_size": 11167,
						"regions":
						{
						},
						"selection":
						[
							[
								2178,
								2178
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 408.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js/app.js",
					"settings":
					{
						"buffer_size": 2832,
						"regions":
						{
						},
						"selection":
						[
							[
								1218,
								1218
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/nbi/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
					"settings":
					{
						"buffer_size": 31084,
						"regions":
						{
						},
						"selection":
						[
							[
								8810,
								8810
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2775.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 204.0,
	"status_bar_visible": true
}
